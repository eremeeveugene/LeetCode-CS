Summary
  Generated on: 01/04/2024 - 18:24:48
  Coverage date: 01/04/2024 - 18:24:29 - 01/04/2024 - 18:24:32
  Parser: MultiReport (2x Cobertura)
  Assemblies: 2
  Classes: 38
  Files: 38
  Line coverage: 93.6%
  Covered lines: 698
  Uncovered lines: 47
  Coverable lines: 745
  Total lines: 1946
  Branch coverage: 89.8% (239 of 266)
  Covered branches: 239
  Total branches: 266
  Method coverage: 93% (93 of 100)
  Covered methods: 93
  Total methods: 100

LeetCode                                                                               94.4%
  LeetCode.Algorithms.AddTwoNumbers.AddTwoNumbersInPlaceCarry                         100.0%
  LeetCode.Algorithms.BinaryTreeInorderTraversal.BinaryTreeInorderTraversalRecursive   89.4%
  LeetCode.Algorithms.CountingBits.CountingBitsDynamicProgramming                     100.0%
  LeetCode.Algorithms.CountingBits.CountingBitsIterative                              100.0%
  LeetCode.Algorithms.MergeTwoSortedLists.MergeTwoSortedListsLinear                    95.4%
  LeetCode.Algorithms.MergeTwoSortedLists.MergeTwoSortedListsLinearV2                  92.0%
  LeetCode.Algorithms.MissingNumber.MissingNumberCumulativeSum                        100.0%
  LeetCode.Algorithms.MissingNumber.MissingNumberIterativeSumAndSubtract              100.0%
  LeetCode.Algorithms.MissingNumber.MissingNumberSortAndForSearch                     100.0%
  LeetCode.Algorithms.MissingNumber.MissingNumberSortAndWhileSearch                   100.0%
  LeetCode.Algorithms.MissingNumber.MissingNumberSumFormula                            71.4%
  LeetCode.Algorithms.PlusOne.PlusOneIncrementDigitArray                              100.0%
  LeetCode.Algorithms.PlusOne.PlusOneIncrementDigitArrayV2                            100.0%
  LeetCode.Algorithms.RemoveElement.RemoveElementBruteForce                           100.0%
  LeetCode.Algorithms.RomanToInteger.Iterative.RomanNumeral                            90.0%
  LeetCode.Algorithms.RomanToInteger.Iterative.RomanSymbol                             44.4%
  LeetCode.Algorithms.RomanToInteger.Iterative.RomanToIntegerIterative                100.0%
  LeetCode.Algorithms.RomanToInteger.Iterative.SubtractiveRomanNumeral                 88.8%
  LeetCode.Algorithms.SearchInsertPosition.SearchInsertPositionBinarySearch           100.0%
  LeetCode.Algorithms.SearchInsertPosition.SearchInsertPositionIterative              100.0%
  LeetCode.Algorithms.Sqrt.SqrtBinarySearch                                           100.0%
  LeetCode.Algorithms.Sqrt.SqrtNewtonsMethod                                          100.0%
  LeetCode.Algorithms.ThreeSum.ThreeSumBruteForce                                     100.0%
  LeetCode.Algorithms.ThreeSum.ThreeSumTwoPointers                                     86.4%
  LeetCode.Algorithms.TwoSum.TwoSumBruteForce                                          91.6%
  LeetCode.Algorithms.TwoSum.TwoSumDictionary                                          93.3%
  LeetCode.Concurrency.FizzBuzzMultithreaded.FizzBuzzMultithreadedMonitorLock         100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderAutoResetEvent                        100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderManualResetEvent                      100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderMonitor                               100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderSemaphoreSlim                         100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderTaskCompletionSource                  100.0%
  LeetCode.Concurrency.PrintInOrder.PrintInOrderThreadSleep                           100.0%

LeetCode.Core                                                                          87.9%
  LeetCode.Core.EqualityComparers.OrderInsensitiveIntArrayEqualityComparer             69.2%
  LeetCode.Core.Extensions.ArrayExtensions                                            100.0%
  LeetCode.Core.Helpers.JsonConvertHelper<T>                                          100.0%
  LeetCode.Core.Models.ListNode                                                       100.0%
  LeetCode.Core.Models.TreeNode                                                        86.3%
