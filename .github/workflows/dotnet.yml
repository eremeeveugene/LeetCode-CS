name: .NET

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal
      - name: Run Tests with Coverage
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
      - name: Install Report Generator Tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: List TestResults Files
        run: ls -R ./Tests/**/TestResults/
      - name: Generate Coverage Report
        run: reportgenerator -reports:"./Tests/**/TestResults/**/coverage.cobertura.xml" -targetdir:coverage -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
      - name: Check Coverage Percentage
        run: |
          coveragePercentage=$(awk '/Linecoverage:/{print $4}' coverage.opencover.xml | sed 's/%//')
          if (( $(echo "$coveragePercentage < 90" | bc -l) )); then
            echo "Coverage is below 90%. It's at $coveragePercentage%"
            exit 1
          else
            echo "Coverage is above 90%. It's at $coveragePercentage%"
          fi